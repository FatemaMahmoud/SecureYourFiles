package securefilesharing;

import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
class File {
    
    private String fileName;
    private int ownId;
    
    public File(String fileName, int ownId) {
        this.fileName = fileName;
        this.ownId = ownId;
    }
    
    public String getFileName() {
        return fileName;
    }
    
    public int getOwnId() {
        return ownId;
    }
    
}

public class MainPanel extends javax.swing.JPanel {

    /**
     * Creates new form MainPanel
     */
    private ArrayList<File> files;
    
    public MainPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        sharedFilesPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        uploadBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        welcomeLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        newRequestsPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(102, 0, 102))); // NOI18N
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createTitledBorder(null, "Shared Files", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(102, 0, 102))); // NOI18N

        sharedFilesPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("File Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel2.setText("File Owner");

        javax.swing.GroupLayout sharedFilesPanelLayout = new javax.swing.GroupLayout(sharedFilesPanel);
        sharedFilesPanel.setLayout(sharedFilesPanelLayout);
        sharedFilesPanelLayout.setHorizontalGroup(
            sharedFilesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sharedFilesPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addContainerGap(130, Short.MAX_VALUE))
        );
        sharedFilesPanelLayout.setVerticalGroup(
            sharedFilesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sharedFilesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sharedFilesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(325, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(sharedFilesPanel);

        uploadBtn.setBackground(new java.awt.Color(102, 102, 102));
        uploadBtn.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        uploadBtn.setForeground(new java.awt.Color(255, 255, 255));
        uploadBtn.setText("Upload ");
        uploadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadBtnActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cloud security mark free icon 2 (small).png"))); // NOI18N

        welcomeLabel.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        welcomeLabel.setForeground(new java.awt.Color(153, 153, 153));
        welcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeLabel.setText("Welcome, Fatema!");
        welcomeLabel.setAlignmentX(0.5F);

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(102, 0, 102))); // NOI18N
        jScrollPane3.setViewportBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Requests", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(102, 0, 102))); // NOI18N

        newRequestsPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setText("File Name");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setText("Requester");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("Action");

        javax.swing.GroupLayout newRequestsPanelLayout = new javax.swing.GroupLayout(newRequestsPanel);
        newRequestsPanel.setLayout(newRequestsPanelLayout);
        newRequestsPanelLayout.setHorizontalGroup(
            newRequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newRequestsPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel8)
                .addGap(38, 38, 38)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(35, 35, 35))
        );
        newRequestsPanelLayout.setVerticalGroup(
            newRequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newRequestsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newRequestsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addContainerGap(314, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(newRequestsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jLabel5))
                            .addComponent(welcomeLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(uploadBtn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(welcomeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uploadBtn)
                .addGap(76, 76, 76))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void uploadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadBtnActionPerformed
        // TODO add your handling code here:
        SecureFileSharing.uploadFile();
        JOptionPane.showMessageDialog(null, "Uploaded");
    }//GEN-LAST:event_uploadBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel newRequestsPanel;
    private javax.swing.JPanel sharedFilesPanel;
    private javax.swing.JButton uploadBtn;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables

    public void initComponents0() {
        
        files = new ArrayList<>();
        welcomeLabel.setText("Welcome, " + SecureFileSharing.users.get(SecureFileSharing.currentUser).getUserName() + "!");
        int counter = 0;
       
        ArrayList<String> myReqs = SecureFileSharing.users.get(SecureFileSharing.currentUser).getRequests();
        
        for (int i = 0; i < myReqs.size(); i++) {
            String[] arr = myReqs.get(i).split("&");
            String requester = SecureFileSharing.users.get(Integer.parseInt(arr[0])).getUserName();
            String fname = arr[1];
            
            JLabel lname = new JLabel();
            lname.setText(fname);
            lname.setBounds(5, 45 * i + 45, 100, 20); 
            lname.setBorder(BorderFactory.createLineBorder(new Color(102, 0, 102)));
            lname.setHorizontalAlignment(JLabel.CENTER);
            newRequestsPanel.add(lname);
            
            JLabel lreq = new JLabel();
            lreq.setText(requester);
            lreq.setBounds(100 + 10, 45 * i + 45, 100, 20);
            lreq.setBorder(BorderFactory.createLineBorder(new Color(102, 0, 102)));
            lreq.setHorizontalAlignment(JLabel.CENTER);
            newRequestsPanel.add(lreq);
            
            JLabel lapprove = new JLabel();
            lapprove.setIcon(new ImageIcon(this.getClass().getClassLoader().getResource("green.png")));
            lapprove.setBounds(100 * 2 + 28, 45 * i + 37, 40, 40);
            newRequestsPanel.add(lapprove);
            
            JLabel ldeny = new JLabel();
            ldeny.setIcon(new ImageIcon(this.getClass().getClassLoader().getResource("close.png")));
            ldeny.setBounds(100 * 2 + 40 + 28, 45 * i + 37, 40, 40);
            newRequestsPanel.add(ldeny);
            
            lapprove.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent evt){
                    int index = (lapprove.getLocation().y - 37) / 45;
                    SecureFileSharing.approveRequest(SecureFileSharing.users.get(SecureFileSharing.currentUser)
                            .getRequests().get(index));
                    SecureFileSharing.saveUsers("Users.list");
                    JOptionPane.showMessageDialog(null, "Approved");
                }
            });
            
            ldeny.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseClicked(MouseEvent evt){
                    int index = (lapprove.getLocation().y - 37) / 45;
                    SecureFileSharing.denyRequest(SecureFileSharing.users.get(SecureFileSharing.currentUser)
                            .getRequests().get(index));
                    SecureFileSharing.saveUsers("Users.list");
                    JOptionPane.showMessageDialog(null, "Denied");
                }
            });

        }
        
        for (int i = 0; i < SecureFileSharing.users.size(); i++) {
            
            ArrayList<String> userFiles = SecureFileSharing.users.get(i).getFileOwn();
            
            for (int j = 0; j < userFiles.size(); j++) {
                
                files.add(new File(userFiles.get(j), i));
                JLabel lname = new JLabel();
                lname.setText(userFiles.get(j));
                lname.setBounds(5, 25 * counter + 40, 100, 20); //30 is el masafa elly fel awal and 5 between each of them
                lname.setBorder(BorderFactory.createLineBorder(new Color(102, 0, 102)));
                lname.setHorizontalAlignment(JLabel.CENTER);
                sharedFilesPanel.add(lname);
                
                JLabel lown = new JLabel();
                lown.setText(SecureFileSharing.users.get(i).getUserName());
                lown.setBounds(100 + 10, 25 * counter + 40, 100, 20);
                lown.setBorder(BorderFactory.createLineBorder(new Color(102, 0, 102)));
                lown.setHorizontalAlignment(JLabel.CENTER);
                sharedFilesPanel.add(lown);
                
                JButton req = new JButton();
                req.setBounds(100 * 2 + 15, 25 * counter + 40, 100, 20);
                
                if (i == SecureFileSharing.currentUser || SecureFileSharing.users.get(SecureFileSharing.currentUser).
                        getAccess().contains(userFiles.get(j))) {
                    req.setText("Download"); //my requests
                    req.setBackground(new Color(102, 0, 102));
                    req.setForeground(Color.white);
                    req.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent evt) {
                            int index = (req.getLocation().y - 40) / 25;
                            String fname ="/"+ SecureFileSharing.users.get(files.get(index).getOwnId()).getUserName()
                                    + "/" + files.get(index).getFileName();
                            SecureFileSharing.downloadFile(files.get(index).getFileName(), fname);
                            JOptionPane.showMessageDialog(null, "Downloaded");
                        }
                    });
                } else if (SecureFileSharing.users.get(SecureFileSharing.currentUser).getSentReqs().
                        contains(userFiles.get(j))) {
                    req.setText("Pending");
                    req.setBackground(Color.white);
                    req.setEnabled(false);
                } else {
                    req.setText("Request");
                    req.setBackground(new Color(0, 102, 0));
                    req.setForeground(Color.white);
                    req.addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent evt) {
                            int index = (req.getLocation().y - 40) / 25;
                            SecureFileSharing.sendRequest(files.get(index).getFileName(), files.get(index).getOwnId());
                            ((JButton) evt.getSource()).setText("Pending");
                            req.setBackground(Color.white);
                            req.setEnabled(false);
                            req.validate();
                            //req.repaint();
                        }
                    });
                }
                sharedFilesPanel.add(req);
                counter++;
                
            }
            
        }
    }
    
}
